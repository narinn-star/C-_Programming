/*
[객체 전달]
1. 값에 의한 호출로 객체 전달
	문제점 
	- 생성자는 실행되지 않고 소멸자만 실행됨. Ex_5-1(1) 참고
		(Ex_5-1(1) 실행 결과:
			생성자 실행 radius = 30
			소멸자 실행 radius = 31  //복사!!
			30
			소멸자 실행 radius = 30
	이런 문제가 발생하는 이유
	- 생성자가 실행이 되면 전달 받은 원본의 상태(30)을 잃게 됨
	이 문제를 해결하기 위한 방법 : 복사 생성자(copy constructor)

2. 주소에 의한 호출로 객체 전달
	- 원본 객체를 복사하는 시간 소모가 없음
	- 값에 의한 호출시에 발생하는 문제점이 없음
	- 원본 객체 훼손 가능성이 있으므로 주의
		(Ex_5-1(2) 실행 결과:
			생성자 실행 radius = 30
			31
			소멸자 실행 radius = 31
		- 복사 과정이 없음을 보여줌.

3. 참조에 의한 호출로 객체 전달
	장점
		- 가독성 UP, 보통 변수와 같이 작성하기 쉬움
	유의할 점
		- 원본 객체에 영향 O
		- 생성자와 소멸자 둘 다 실행X
			(Ex_5-6 실행 결과:
				생성자 실행 radius = 30 //waffle 객체 생성
				31
				소멸자 실행 radius = 31 // waffle 객체 소멸
*/