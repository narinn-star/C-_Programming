/*
[가상 함수]
1. 가상 함수
	- 파생 클래스에서 재정의할 함수를 알려주는 인터페이스 역할

2. 추상 클래스
	- 순수 가상 함수 (pure virtual function) 
		: 함수의 코드가 없고 선언만 있는 가상 함수
			virtual void draw() = 0; // 순수 가상 함수 선언
	- 추상 클래스 (abstract class)
		: 최소 하나의 순수 가상 함수를 가진 클래스
		- 불완전한 클래스이기 때문에 추상 클래스의 인스턴스(객체)를 생성할 수 없음
		- 추상 클래스에 대한 포인터 선언은 문제X
		- 인스턴스를 생성할 목적이 아닌 상속을 위한 기본 클래스
		- 순수 가상 함수를 통해 파생 클래스가 구현할 함수의 원형을 보여주는 인터페이스 역할
		- 추상 클래스의 모든 멤버 함수를 순수 가상 함수로 선언할 필요는 없음. 
			파생 클래스에서 구현해야 할 함수만 순수 가상 함수로 선언.

3. 추상 클래스 상속
	- 추상 클래스를 상속받는 파생 클래스는 자동으로 추상 클래스
		순수 가상 함수를 그대로 상속받기 때문

4. 추상 클래스 구현
	- 파생 클래스에 추상 클래스의 순수 가상 함수의 코드를 작성함을 뜻함
	- 파생 클래스가 온전한 클래스가 되기 위해서는 상속받은 추상 클래스의 모든 
	  순수 가상 함수를 오버라이딩하여 구현해야 함
*/